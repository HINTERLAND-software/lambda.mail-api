version: 2

defaults: &defaults
  docker:
    - image: circleci/node:8
  working_directory: ~

jobs:
  prepare:
    <<: *defaults
    steps:
      - restore_cache:
          key: checkout-{{ .Revision }}

      - checkout

      - save_cache:
          key: checkout-{{ .Revision }}
          paths:
            - .

      - restore_cache:
          keys:
            - node-modules-{{ checksum "package.json" }}
            - node-modules-

      - run: npm install

      - save_cache:
          key: node-modules-{{ checksum "package.json" }}
          paths:
            - node_modules

  test:
    <<: *defaults
    steps:
      - restore_cache:
          key: checkout-{{ .Revision }}

      - restore_cache:
          keys:
            - node-modules-{{ checksum "package.json" }}
            - node-modules-

      - run: npm test

  deploy:
    <<: *defaults
    steps:
      - restore_cache:
          key: checkout-{{ .Revision }}

      - restore_cache:
          keys:
            - node-modules-{{ checksum "package.json" }}
            - node-modules-

      - run: sudo apt-get install python-pip python-dev

      - restore_cache:
          key: aws-cli
      - run: pip install botocore awscli --upgrade --user
      - run: chmod +x ~/.local/bin/aws
      - run: echo 'export PATH=$HOME/.local/bin:$PATH' >> $BASH_ENV
      - save_cache:
          key: aws-cli
          paths:
            - ~/.local

      - run: |
          case ${CIRCLE_BRANCH} in
              master )
                  ACCOUNT_ID=${DEVELOPMENT_ACCOUNT}
                  DEPLOY="npm run deploy"
                  ;;
              production )
                  ACCOUNT_ID=${PRODUCTION_ACCOUNT}
                  DEPLOY="npm run deploy:prod"
                  ;;
          esac

          source <(curl -sL ${ASSUME_ROLE_GIST}) $ACCOUNT_ID ${SERVERLESS_ROLE} ${AWS_REGION} ${CIRCLE_SHA1}

          eval $DEPLOY
workflows:
  version: 2
  prepare-test-deploy:
    jobs:
      - prepare
      - test:
          requires:
            - prepare
      - deploy:
          context: aws-deployment
          requires:
            - test
          filters:
            branches:
              only: /^(master|production)$/